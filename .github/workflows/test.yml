name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend_pylint:
    name: Backend Pylint Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pylint  # Install pylint

      - name: Run Pylint
        run: |
          echo "Running Pylint on backend code..."
          pylint backend/app backend/tests --disable=C,R  # Only run essential pylint checks

  # Backend Unit Tests
  backend_unit_tests:
    name: Backend Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run Unit Tests
        run: |
          echo "Running Backend Unit Tests..."
          pytest backend/tests/unit/test_game_logic.py

  # Backend Integration Tests
  backend_integration_tests:
    name: Backend Integration Tests
    runs-on: ubuntu-latest
    needs: backend_unit_tests # Run only if unit tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run Integration Tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Running Backend Integration Tests..."
          pytest backend/tests/integration/test_endpoints.py

  # Placeholder for future frontend tests
  # frontend_tests:
  #   name: Frontend Tests
  #   runs-on: ubuntu-latest
  #   needs: backend_integration_tests # Run after backend tests

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "20" # Explicitly set to use Node.js 20

  #     - name: Install frontend dependencies
  #       run: |
  #         cd frontend
  #         npm install

  #     - name: Run Frontend Tests
  #       run: |
  #         echo "Running Frontend Tests..."
  #         npm test
